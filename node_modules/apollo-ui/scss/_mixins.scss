///
///  Creates font-face declaration with optional font weight and style
///

@mixin font-face($family, $path, $filename: '', $weight: normal, $style: normal) {
  @font-face {
    font-family: $family;
    src: url('#{ $path }#{ $filename }.eot');
    src: url('#{ $path }#{ $filename }.eot?#iefix') format('embedded-opentype'),
         url('#{ $path }#{ $filename }.woff') format('woff'),
         url('#{ $path }#{ $filename }.ttf') format('truetype');
    font-weight: $weight;
    font-style: $style;
  }
}


///
///  Background colors
///

@mixin bg-color($bg-color, $text-color: null, $link-color: null) {
  background-color: $bg-color;

  @if($text-color) {
    color: $text-color;
  }

  @if($link-color) {
    a {
      &,
      &:visited {
        color: $link-color;
      }
      &:hover,
      &:active {
        color: darken($link-color, 10%);
      }

      // Reset button link colors
      @each $btn-name, $btn-props in $btn-variants {
        &.btn-#{ $btn-name },
        &.btn-#{ $btn-name }:hover,
        &.btn-#{ $btn-name }:visited {
          color: map-get($btn-props, 'color');
        }

        &.btn-#{ $btn-name }:active {
          color: map-get($btn-props, 'color-active');
        }
      }

    }
  }
}


///
/// Error states
///

@mixin alert-bg($bg-color, $text-color: null, $link-color: null, $icon: null) {
  @include bg-color($bg-color, $text-color, $link-color);
  @if($icon) {
    &::before {
      content: map-get($_icons-map, $icon);
    }
  }
}
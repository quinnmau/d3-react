.form-group {
  @include clearfix();
  margin-bottom: $form-group-margin-bottom;
}


.control-label {
  display: block;
  &.disabled {
    color: $input-color-disabled;
  }

  &.required::after {
    content: "*";
    color: $brand-danger;
  }
}

.form-control {
  position: relative;
  z-index: 1;
  display: block;
  width: 100%;
  height: $input-height;
  padding: $input-padding-y $input-padding-x;
  color: $input-color;
  line-height: $input-line-height;
  white-space: nowrap;
  text-overflow: ellipsis;
  border: $border-width solid $charcoal-lighter;
  background-color: $input-bg;
  transition: border $transition-fast,
              background-color $transition-fast,
              box-shadow $transition-fast;

  // Placeholder
  &::placeholder {
    color: $input-color-placeholder;
    // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
    opacity: 1;
  }

  // @FIXME we need a more noticeable focus indicator
  &:focus,
  &.focus,
  &:active,
  &.active,
  label:active + & {
    border: none;
    background-color: $input-bg-focus;
    outline: none;
  }

  &:focus,
  &.focus {
    box-shadow: $shadow-hover;
  }

  &:active,
  &.active,
  label:active + & {
    box-shadow: $shadow-active;
  }


  &:disabled,
  &.disabled {
    background-color: $input-bg-disabled; // @TODO: replace with light gray from palette
    box-shadow: none;
    cursor: not-allowed;
  }

  &.input-lg {
    height: $input-height-lg;
    padding: $input-padding-y-lg $input-padding-x-lg;
  }
}

select.form-control {
  appearance: none;
  border: $input-btn-border-width solid $input-border-color;
  background: $input-bg $svg-chevron-down-blue no-repeat right $input-padding-x center;
  background-size: $font-size-base;

  &,
  &::placeholder {
    height: $input-height;
    padding-top: 0;
    padding-bottom: 0;
  }
}

textarea.form-control {
  height: auto;
  white-space: inherit;
  overflow: inherit;
}

.form-msg {
  @extend .alert;
  // @TODO: Replace with `.alert-sm` once that's ready
  padding-top: $input-padding-y * 2 / 3;
  padding-bottom: $input-padding-y * 2 / 3;

  &:before {
    font-size: $font-size-sm;
  }
}

@each $state, $state-props in $alert-states {
  $state-color: map-get($state-props, color);
  $state-bg: map-get($state-props, bg);
  $state-link-color: map-get($state-props, link);
  $state-icon: map-get($state-props, icon);

  .has-#{ $state } {
    & .form-control,
    &.form-control {
      border-color: $state-bg;
    }

    & .form-msg,
    &.form-msg {
      @include alert-bg($bg-color: $state-bg, $text-color: $state-color, $icon: $state-icon);
    }
  }
}



///
/// Checkbox and Radio controls
///

input[type='checkbox'],
input[type='radio'] {
  position: relative;
  top: .125rem;
  width: $font-size-base;
  height: $font-size-base;
  margin-right: .125rem;
  border: $input-btn-border-width solid $input-border-color;
  background-color: $input-bg;
  appearance: none; // Appearance of native control
  transition: box-shadow $transition-fast;

  &:hover {
    box-shadow: $shadow-hover;

    &,
    & + label {
      cursor: pointer;
    }

    &:disabled,
    &.disabled {
      box-shadow: none;

      &,
      & + label {
        cursor: not-allowed;
      }
    }
  }

  &:disabled,
  &.disabled {
    background-color: $input-bg-disabled;

    + label {
      color: $input-color-disabled;
    }
  }

  &:focus {
    outline: $input-outline;
  }
}

input[type='checkbox'] {
  background-size: 100%;

  &:checked {
    background: $input-bg-focus $svg-check-solid-blue no-repeat center center;
    background-size: 100%;
    border: none;
  }
}

input[type='radio'] {
  border-radius: 50%;

  &:checked {
    background-color: $brand-primary;
    box-shadow: inset 0 0 0 ($border-width * 2) #fff;
  }
}

///
/// Toggle (Radio variation)
///

%toggle-base {
  position: relative;
  z-index: 1;
  padding: $toggle-padding-y $toggle-padding-x;
  line-height: 1;
  text-align: center;
  background-color: rgba(255, 255, 255, .85);
  cursor: pointer;
  transition: all $transition-fast;
  &,
  .bg-dark & {
    color: $blue;
  }
}

%toggle-hover {
  z-index: 2;
  background-color: rgba(255, 255, 255, 1);
  box-shadow: $shadow-hover;
  &:active {
    color: #fff;
    background-color: $charcoal;
  }
}

%toggle-active {
  z-index: 2;
  color: #fff;
  background-color: $blue;
  box-shadow: $shadow-hover;
}

.toggle {
  @if $enable-flex {
    display: flex;
    flex-wrap: wrap;
  } @else {
    display: table;
    table-layout: fixed;
    width: 100%;
  }

  input[type="radio"] {
    display: none;

    + label {
      @extend %toggle-base;

      @if $enable-flex {
        flex: 1;
      } @else {
        display: table-cell;
      }

      &:hover,
      &:active {
        z-index: 2;
      }

      &:hover {
        @extend %toggle-hover;
      }

      // &:active {
      //   background-color: $charcoal;
      //   color: #fff;
      // }
    }

    &:checked + label {
      @extend %toggle-active;
    }
  }
}


